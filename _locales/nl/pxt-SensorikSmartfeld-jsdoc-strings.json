{
    "GroveGesture": "Grove Gestures",
    "MyEnumPlugLabel": "Use this file for custom functions and blocks. More information at https://makecode.microbit.org/blocks/custom",
    "RegisterHelper.readRegister8": "Read a 8-byte register of the address location",
    "RegisterHelper.readRegisterInt16": "Read a (Int16) 16-byte register of the address location",
    "RegisterHelper.readRegisterUInt16": "Read a (UInt16) 16-byte register of the address location",
    "RegisterHelper.writeRegister": "Write register of the address location",
    "TubeTab": "Grove 4-digit display",
    "smartfeldAktoren": "Custom blocks",
    "smartfeldAktoren.FourDigitDisplay.bit": "Show a single number from 0 to 9 at a specified digit of Grove - 4-Digit Display",
    "smartfeldAktoren.FourDigitDisplay.bit|param|bitAddr": "value of bit number",
    "smartfeldAktoren.FourDigitDisplay.bit|param|dispData": "value of number",
    "smartfeldAktoren.FourDigitDisplay.clear": "Clear the display",
    "smartfeldAktoren.FourDigitDisplay.point": "Turn on or off the colon point on Grove - 4-Digit Display",
    "smartfeldAktoren.FourDigitDisplay.set": "Set the brightness level of display at from 0 to 7",
    "smartfeldAktoren.FourDigitDisplay.set|param|level": "value of brightness light level",
    "smartfeldAktoren.FourDigitDisplay.show": "Show a 4 digits number on display",
    "smartfeldAktoren.FourDigitDisplay.show|param|dispData": "value of number",
    "smartfeldAktoren.Switchpig.programReceiver": "Set this function at startup to program the receiver.",
    "smartfeldAktoren.Switchpig.programReceiver|param|rfGroupID": "Piggy name",
    "smartfeldAktoren.Switchpig.selectRfGroupID": "Selects a piggy with the corresponding name. It is sufficient to make the selection once at the start of the program.",
    "smartfeldAktoren.Switchpig.selectRfGroupID|param|rfGroupID": "Choice of the piggy to be operated.",
    "smartfeldAktoren.Switchpig.switchPlug": "Switches a socket of the piggy on or off.",
    "smartfeldAktoren.Switchpig.switchPlug|param|ch": "Socket to be switched",
    "smartfeldAktoren.Switchpig.switchPlug|param|state": "State of the socket (On or Off)",
    "smartfeldAktoren.createChain": "Create an LED chain",
    "smartfeldAktoren.electromagnetAus": "Deactivate electromagnet",
    "smartfeldAktoren.electromagnetEin": "Activate electromagnet",
    "smartfeldAktoren.erstelle_Display": "Create a 4-Digit Display",
    "smartfeldAktoren.ledAus": "Switch LED off",
    "smartfeldAktoren.ledEin": "Switch LED on",
    "smartfeldAktoren.ledUmschalten": "Toggle LED",
    "smartfeldAktoren.relaisAus": "Deactivate relay",
    "smartfeldAktoren.relaisEin": "Activate relay",
    "smartfeldAktoren.set_angle": "Set an angle for the 180° Servo",
    "smartfeldAktoren.set_angle|param|pin": "Which pin the motor is on",
    "smartfeldAktoren.spin_one_way": "Spins the motor in one direction at full speed",
    "smartfeldAktoren.spin_one_way_with_speed": "Spins the motor in one direction, with a speed from 0 to 100",
    "smartfeldAktoren.spin_one_way_with_speed|param|pin": "Which pin the motor is on",
    "smartfeldAktoren.spin_one_way_with_speed|param|speed": "Speed from 0 to 100",
    "smartfeldAktoren.spin_one_way|param|pin": "Which pin the motor is on",
    "smartfeldAktoren.spin_other_way": "Spins the motor in other direction at full speed",
    "smartfeldAktoren.spin_other_way_with_speed": "Spins the motor in the other direction, with a speed from 0 to 100",
    "smartfeldAktoren.spin_other_way_with_speed|param|pin": "Which pin the motor is on",
    "smartfeldAktoren.spin_other_way_with_speed|param|speed": "Speed from 0 to 100",
    "smartfeldAktoren.spin_other_way|param|pin": "Which pin the motor is on",
    "smartfeldAktoren.turn_off_motor": "Turns off the motor at this pin",
    "smartfeldAktoren.turn_off_motor|param|pin": "Which pin the motor is on",
    "smartfeldSensoren": "SCD30 block\r\n\r\nOrganize your blocks in groups\r\n\r\nGrove AHT20 Custom Block",
    "smartfeldSensoren.AHT20.aht20ReadTemperatureC": "Read the temperature(°C) from Grove-AHT20(SKU#101990644)",
    "smartfeldSensoren.MPR121.initTouchController": "Initialize the touch controller.",
    "smartfeldSensoren.MPR121.isTouched": "Returns true if a specific touch sensor was just touched. Otherwise false.",
    "smartfeldSensoren.MPR121.isTouched|param|sensor": "the touch sensor to be checked, eg: TouchSensor.T0",
    "smartfeldSensoren.MPR121.onAnyTouchSensorReleased": "Do something when any sensor is released.",
    "smartfeldSensoren.MPR121.onAnyTouchSensorReleased|param|handler": "body code to run when event is raised",
    "smartfeldSensoren.MPR121.onAnyTouchSensorTouched": "Do something when any sensor is touched.",
    "smartfeldSensoren.MPR121.onAnyTouchSensorTouched|param|handler": "body code to run when event is raised",
    "smartfeldSensoren.MPR121.onTouchSensorReleased": "Do something when a specific sensor is released. A release event is performed at the end of the touch.",
    "smartfeldSensoren.MPR121.onTouchSensorReleased|param|handler": "body code to run when the sensor is released",
    "smartfeldSensoren.MPR121.onTouchSensorReleased|param|sensor": "the touch sensor to be monitored, e.g.: TouchSensor.T0",
    "smartfeldSensoren.MPR121.onTouchSensorTouched": "Do something when a specific sensor is touched. This touch event is executed directly at the beginning of the touch.",
    "smartfeldSensoren.MPR121.onTouchSensorTouched|param|handler": "body code to run when the sensor is touched",
    "smartfeldSensoren.MPR121.onTouchSensorTouched|param|sensor": "the touch sensor to be monitored, e.g.: TouchSensor.T0",
    "smartfeldSensoren.MPR121.setAddress": "Set device address",
    "smartfeldSensoren.MPR121.setAddress|param|address": ": I2C address",
    "smartfeldSensoren.MPR121.touchSensor": "Returns the index number of the last touch event received. This can be either a touch or release event. This block is intended to be used within the touch event handler.",
    "smartfeldSensoren.PAJ7620.init": "Create a new driver of Grove - Gesture",
    "smartfeldSensoren.PAJ7620.read": "Detect and recognize the gestures from Grove - Gesture",
    "smartfeldSensoren.SCD30.getCalibrationRefValue": "read calibration reference value \r\nthis should always return 400 which is the ideal calibration\r\nvalue for outdoor calibration",
    "smartfeldSensoren.SCD30.getVersion": "read sensor version",
    "smartfeldSensoren.SCD30.readCO2": "Reads CO2",
    "smartfeldSensoren.SCD30.readHumidity": "Reads Humidity",
    "smartfeldSensoren.SCD30.readTemperature": "Reads Temperature",
    "smartfeldSensoren.SCD30.setCalibration400ppm": "Calibrates sensor to 400ppm",
    "smartfeldSensoren.SI1151.init": "Returns int given a byte array",
    "smartfeldSensoren.SI1151.send_command": "Sends command to the command register",
    "smartfeldSensoren.gas_init": "Init gas sensor SCD30",
    "smartfeldSensoren.getGestureModel": "get Grove Gesture model",
    "smartfeldSensoren.getHalfWordIR": "get halfword sunlight",
    "smartfeldSensoren.getHalfWord_Visible": "get halfword sunlight",
    "smartfeldSensoren.ggesture": "Converts the gesture name to a number\r\nUseful for comparisons",
    "smartfeldSensoren.hw837_getUV": "init HW-837 UV module\r\n*",
    "smartfeldSensoren.initGesture": "init Grove Gesture modules",
    "smartfeldSensoren.initSunlight": "init Grove Sunlight module",
    "smartfeldSensoren.onGesture": "Do something when a gesture is detected by Grove - Gesture",
    "smartfeldSensoren.onGesture|param|gesture": "type of gesture to detect",
    "smartfeldSensoren.onGesture|param|handler": "code to run",
    "smartfeldSensoren.readGasCO2eq": "Read CO2eq value of gas sensor SCD30",
    "smartfeldSensoren.readGasHum": "Read humidity value of gas sensor SCD30",
    "smartfeldSensoren.readGasTemp": "Read temperature value of gas sensor SCD30",
    "smartfeldSensoren.setGasCalibration": "Calibrate SCD30 to use actual value as 400 ppm",
    "smartfeldSensoren.start": "start Grove Color sensor"
}